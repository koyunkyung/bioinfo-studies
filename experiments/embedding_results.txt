Embedding functions test settings:

    combined_cell_line = ["Camptothecin:TOP1", "Vinblastine:Microtubule destabiliser", "Cisplatin:DNA crosslinker"]
    smiles_list = ["CCC1(C2=C(COC1=O)C(=O)N3CC4=CC5=CC=CC=C5N=C4C3=C2)O", "N.N.Cl[Pt]Cl", "CC1=C(C=C(C=N1)Cl)NCC2=CC=C(S2)C(=O)NC(CC3CCCC3)C(=O)NC4CC4"]


### Cell line embeddings ###

BioBERT Embeddings Shape: torch.Size([3, 768])
BioBERT Embeddings Tensor: 
tensor([[-0.0659,  0.1328, -0.5172,  ..., -0.4773, -0.1412,  0.9999],
        [-0.0966,  0.0309,  0.9172,  ...,  0.9601, -0.1076,  1.0000],
        [-0.0607,  0.1155,  0.7232,  ...,  0.7708, -0.0805,  1.0000]])


### Drug Embeddings ###

Morgan Fingerprint Embeddings Shape: torch.Size([3, 2048])
Morgan Fingerprint Embeddings Tensor: 
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.]])



ECFP Embeddings Shape: torch.Size([3, 2048])
ECFP Embeddings Tensor: 
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.]])



GNN Embeddings Shape: torch.Size([3, 64])
GNN Embeddings Tensor: 
tensor([[ 0.0499,  0.1906, -0.2531,  0.6919,  0.2182, -0.3951,  0.1998,  0.1152,
          0.0897,  0.0406, -0.1768, -0.2388,  0.0064, -0.1600, -0.0781, -0.0235,
         -0.1269,  0.2294,  0.1177, -0.0088, -0.5345,  0.2070,  0.3905, -0.1737,
         -0.1151, -0.0209, -0.0056, -0.0961,  0.1697,  0.2609, -0.4794, -0.0084,
          0.1918, -0.0855, -0.0084, -0.0571,  0.2024,  0.2098, -0.0719,  0.1352,
         -0.0150, -0.2725,  0.0544, -0.0127, -0.1264, -0.3319, -0.1902, -0.1308,
          0.0264,  0.0753,  0.1806,  0.1612, -0.2336, -0.3615,  0.2464, -0.2301,
         -0.0523,  0.0743,  0.2129,  0.0883, -0.2881, -0.2310, -0.1165,  0.0765],
        [-0.0364,  0.2663, -0.2986,  0.9599,  0.4358, -0.5513,  0.1659,  0.2027,
          0.0015,  0.0759, -0.2853, -0.3369,  0.0036, -0.0297, -0.0964,  0.1836,
         -0.1965,  0.2402,  0.1355, -0.0649, -0.8048,  0.1994,  0.6273, -0.1334,
         -0.2289, -0.0895,  0.1295, -0.0594,  0.2480,  0.4676, -0.5337, -0.0021,
          0.2130, -0.0286, -0.2000, -0.2952,  0.0664,  0.2711, -0.1563,  0.3957,
         -0.0348, -0.3423,  0.0977, -0.1314, -0.2073, -0.4600, -0.3878, -0.2305,
          0.1276,  0.0752,  0.1089,  0.2935, -0.4489, -0.4721,  0.1030, -0.3841,
         -0.0469,  0.1880,  0.3557,  0.2541, -0.5641, -0.3965, -0.3163,  0.0711],
        [ 0.0494,  0.1898, -0.2539,  0.6941,  0.2213, -0.3979,  0.1968,  0.1175,
          0.0877,  0.0410, -0.1870, -0.2398,  0.0059, -0.1562, -0.0789, -0.0177,
         -0.1288,  0.2296,  0.1177, -0.0157, -0.5397,  0.2042,  0.3915, -0.1721,
         -0.1173, -0.0223,  0.0024, -0.0930,  0.1733,  0.2639, -0.4782, -0.0078,
          0.1915, -0.0869, -0.0128, -0.0593,  0.1991,  0.2095, -0.0756,  0.1417,
         -0.0133, -0.2738,  0.0592, -0.0153, -0.1283, -0.3374, -0.1925, -0.1305,
          0.0290,  0.0734,  0.1751,  0.1652, -0.2368, -0.3609,  0.2443, -0.2341,
         -0.0514,  0.0751,  0.2132,  0.0955, -0.2929, -0.2355, -0.1210,  0.0767]])


SELFIES Embeddings Shape: torch.Size([3])
SELFIES Embeddings Tensor: tensor([50, 57, 50])


SAFE encoding failed for SMILES: CCC1(C2=C(COC1=O)C(=O)N3CC4=CC5=CC=CC=C5N=C4C3=C2)O with error: Slicing algorithms did not return any bonds that can be cut !
SAFE encoding failed for SMILES: N.N.Cl[Pt]Cl with error: Slicing algorithms did not return any bonds that can be cut !
SAFE Embeddings Shape: torch.Size([1, 89])
SAFE Embeddings Tensor: tensor([[14, 17,  5, 19, 17, 17,  1, 14, 18,  2, 17, 17,  5, 12,  3, 17,  5,  0,
          5,  6, 17, 17, 17,  0,  5,  5, 20,  5,  3, 14, 11,  1, 14,  0,  5,  7,
          2, 14,  9, 13, 16,  3, 14,  5,  0,  5,  7, 14, 14, 14, 14,  5,  3, 14,
          8,  0,  5,  5, 13, 16,  3, 14,  5,  0,  5,  4, 14, 14,  5,  3, 15, 10,
         12,  3, 14, 10,  0,  5,  6,  3, 15,  8, 11,  3, 15,  9,  0,  5,  4]])